# Nginx负载均衡配置 - Windows版本
# 用于电力线分析系统的负载均衡

# 全局配置
# Windows版本不支持user指令
# worker_processes auto;

# 事件配置（Windows不需要epoll）
events {
    worker_connections 1024;
    # Windows不使用epoll，默认使用select
}

# HTTP配置
http {
    # 基础配置
    include mime.types;  # Windows路径简化
    default_type application/octet-stream;
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_response_time $upstream_response_time '
                    'request_time $request_time';
    
    # Windows日志路径（相对于nginx安装目录）
    access_log logs/access.log main;
    error_log logs/error.log warn;
    
    # 性能优化（Windows部分功能受限）
    sendfile off;  # Windows上sendfile可能有问题
    tcp_nopush off;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器组 - 主应用服务器（API接口，加权轮询）
    upstream powerline_backend {
        # 负载均衡算法: round-robin (默认，加权轮询)
        
        # 本地实例1
        server 127.0.0.1:8081 weight=3 max_fails=2 fail_timeout=30s;
        
        # 本地实例2
        server 127.0.0.1:8082 weight=2 max_fails=2 fail_timeout=30s;
        
        # 本地实例3
        server 127.0.0.1:8083 weight=1 max_fails=2 fail_timeout=30s;
        
        # 健康检查
        keepalive 32;
    }

    # 上游服务器组 - 文件上传服务器（最少连接策略）
    upstream upload_backend {
        least_conn;
        
        server 127.0.0.1:8081 max_fails=2 fail_timeout=30s;
        server 127.0.0.1:8082 max_fails=2 fail_timeout=30s;
        server 127.0.0.1:8083 max_fails=2 fail_timeout=30s;
    }

    # 上游服务器组 - 静态资源服务器
    upstream static_backend {
        server 127.0.0.1:8081 weight=1;
        server 127.0.0.1:8082 weight=1;
        server 127.0.0.1:8083 weight=1;
    }

    # 上游服务器组 - WebSocket服务器
    upstream websocket_backend {
        ip_hash;
        server 127.0.0.1:8081;
        server 127.0.0.1:8082;
        server 127.0.0.1:8083;
    }

    # 主服务器配置
    server {
        listen 80;
        server_name localhost 127.0.0.1;
        
        # 全局文件上传大小限制
        client_max_body_size 200M;
        
        # 安全头
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # 根路径 - 重定向到应用
        location / {
            proxy_pass http://powerline_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # 支持WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # API接口
        location /api/ {
            proxy_pass http://powerline_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API特殊配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 文件上传接口（单独配置，使用最少连接策略）
        location /api/file/upload {
            proxy_pass http://upload_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 文件上传特殊配置
            client_max_body_size 200M;
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            proxy_request_buffering off;
        }
        
        # WebSocket连接
        location /ws {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket超时配置
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # 静态资源
        location /static/ {
            proxy_pass http://static_backend;
            proxy_set_header Host $host;
            
            # 静态资源缓存
            expires 1d;
            add_header Cache-Control "public, immutable";
        }
        
        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
    }
}
