# 负载均衡测试专用配置
# 简化版，便于排查问题

worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # 日志配置 - 方便调试
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" upstream_addr=$upstream_addr '
                      'upstream_status=$upstream_status';
    
    access_log  logs/access.log  main;
    error_log   logs/error.log   info;
    
    sendfile        on;
    keepalive_timeout  65;
    
    # 上游服务器组配置 - 加权轮询
    # 权重 2:3:5 对应 20:30:50 的分布
    upstream backend {
        server 127.0.0.1:8081 weight=2 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8082 weight=3 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:8083 weight=5 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # 主服务器配置
    server {
        listen       80;
        server_name  localhost;
        
        # 访问日志
        access_log  logs/backend_access.log  main;
        
        # 代理所有 /api/ 开头的请求到后端服务器组
        location /api/ {
            # 代理到上游服务器组
            proxy_pass http://backend;
            
            # 设置代理头
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 支持长连接
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # 日志
            access_log logs/api_access.log main;
        }
        
        # 根路径返回一个简单的消息
        location / {
            return 200 "Nginx is running. API endpoints are at /api/\n";
            add_header Content-Type text/plain;
        }
        
        # Nginx状态页
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}
